tech.eezeeorder/Eezeeorder:
  # Distelli Manifest for Puppet Pipelines for CI/CD for Eezeeorder project
  # Build is done in Ubuntu server by Puppet Pipelines
  # This manifest assumes the deploy server is:
  # Amazon Linux 2 (based on RedHat 7) on AWS EC2
  # This manifest is for Angular and Python based Web Application
 
  
  #PreBuild Section
  PreBuild: #Steps to run before the build. Use for build prerequisites.
  #--run preBuild Node Requirements--
  #--run preBuild Python Requirements--
  
  #PreBuild Section
  Build: #Steps to build and test the application.
  #--Build Node Requirements--
    - echo "---Building---"
    - echo "--Sourcing nvm--"
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash
    - source ~/.nvm/nvm.sh
    - sudo apt-get -y install npm
    - echo "--Installing NodeJS 10.15.1--"
    - sudo nvm install v10.15.1
    - echo "--Installing latest npm--"
    - (cd client && npm install)
    - echo "--Run Build--"
    - (cd client && npm run build --prod)
    - echo "--Running Tests--"
    
  #--Build Python Requirements--
  
  AfterBuildSuccess: #Steps to run after a successful build.
    - echo "--Desired build was successful--"
    
  AfterBuildFailure: #Steps to run after a failed build.
    - echo "--Build unsuccessful--"
  

  PreRelease: #Steps to run before release is bundled and pushed.
    - echo "---Beginning PreRelease---"
    - echo "--Installing build dependencies--"
    - echo "-Updating apt-get-"
    - sudo apt-get -y update
    - echo "--Including Package Files--"
    - echo "--Excluding Node Module Files--"

  PkgInclude: #Specify which artifacts from the build to bundle into a release.
    - '*'
    - #--Include Python Requirements--
    - server/requirements/requirements.txt
    - server/manage.py
    - server/scripts/gunicorn.py
    - server/eezeeorder/wsgi.py
  
  PkgExclude: #Specify which artifacts to not include in the release.
    - #--Exclude Node Modules--
    - client/node_modules
    
  PreInstall:
    - echo "--Starting PostInstall--"
    - sudo yum -y update
    - echo "-Installing pip-"
    - sudo apt install python3-pip -y
    - sudo apt-get install git -y
    - sudo apt-get install postgresql -y
    - echo "--Sourcing nvm--"
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash
    - source ~/.nvm/nvm.sh
    - sudo yum -y install npm
    - node -e "console.log('Running Node.js ' + process.version)"
    - echo "--Installing NodeJS 10.15.1--"
    - nvm install v10.15.1
    
  PostInstall:
    - echo "--Starting PostInstall--"
    - python3 --version
    - python3 -m venv pythonEnv
    - source pythonEnv/bin/activate
    - pip install -r ./server/requirements/requirements.txt
    - deactivate
    - echo "----------------------------------------------------------------------------------------------------------------------"
    - echo "--------------------------------------------Ready to start server-----------------------------------------------------"
    - echo "----------------------------------------------------------------------------------------------------------------------"
    
  Exec:
    - echo "--Executing--"
    - source pythonEnv/bin/activate
    - gunicorn -c ./server/scripts/gunicorn.py eezeeorder.wsgi --reload
    - python3 ./server/manage.py runserver
    - deactivate